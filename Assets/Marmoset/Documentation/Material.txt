MATERIAL GUIDE
===========

Skyshop comes bundled with many shaders for making use of the image-based lighting (IBL) data it generates. All of these shaders are based on one core shader but have various features enabled or disabled for the sake of performance.


Always pick the lowest minimum feature-set to meet your needs for optimal performance. Switching between many materials at runtime is typically not an issue but rendering with empty texture slots and unnecessary shading math can be.


---


There are four base variations of the core shader:


DIFFUSE IBL
Renders only diffuse lighting (per-pixel) from direct and image-based light sources.


SPECULAR IBL
Renders both diffuse and specular lighting from direct and image-based light sources.


BUMPED DIFFUSE IBL
Renders normal-mapped, diffuse lighting from direct and image-based light sources.


BUMPED SPECULAR IBL
Renders normal-mapped, diffuse and specular lighting from direct and image-based light sources.


---


These four base variations are repeated in the Transparent/ and Self-Illumin/ directories, adding blending and self-illumination features respectively.


SELF-ILLUMIN
Shaders in this category feature Glow Maps, Glow Color and a Glow Strength multiplier. Glow is not affected by lighting or shadows, and gets added on top of direct and image-based shading.
        GLOW COLOR - Overall tint for the self-illumination portion of the material.
        GLOW STRENGTH - Multiplier on the self-illumination portion of the material.
        GLOW MAP - RGB channels act as Glow Color does, A channel acts as a mask


TRANSPARENT
Shaders in this category are alpha-blended based on the Diffuse Color and Texture alpha channels. 


TRANSPARENT CUTOUT
Shaders in this category are alpha-blended as above, but also discard pixels with an alpha value that falls below a cut-off threshold, lending to better performance and crisp edges on blended surfaces.


TRANSPARENT SIMPLE GLASS
Shaders in this category are blended using a combination of alpha-blended diffuse color and additively blended specular reflections. This gives a closer approximation of glass-like transparency, with diffuse opacity representing the clarity or "smokiness" of the glass, while specular reflection is still light bouncing off the glass surface.


SIMPLE GLASS SELF-ILLUMIN
This category contains only one shader for now, Bumped Specular IBL. Transparent, normal-mapped, and glowing: this shader does it all. Every Marmoset shader feature is enabled, which makes it expensive but handy for playing around with all that Marmoset shaders have to offer.


---


CUSTOM LIGHTING CUBEMAPS
It is possible to assign different Skyshop lighting cubemaps to individual materials. This can be useful when dealing with multiple lighting conditions within the same scene. For example all objects deemed to be indoors could be lit with one set of cubemaps, and all others with an outdoor set. Leaving these cubemap slots blank will use whatever lighting data is bound globally by the active Sky object.


---


TEXTURING
All Marmoset shaders come with a Diffuse texture slot, and each shader variation adds texture slots specific to its feature-set. All textures are applied to the mesh's primary set of texture-coordinates.

TEXTURE TILING
Unity also exposes per-texture tiling and offset controls with each texture slot. However in shaders with many texture slots, this feature can add up and hit shader interpolant-limits very quickly. For this reason, Skyshop's shaders are forced to share tiling coordinates. The Diffuse texture slot tiling coordinates are used to tile all other textures (normal map, specular map, glow map). An unfortunate limitation but in practice rarely an issue.

DIFFUSE
Diffuse(RGB) Alpha(A) - This is the base color of the material. The optional alpha channel of this texture is used for transparency in all Transparent/ shaders. This texture's tiling and offset coordinates are shared by all other textures.

SPECULAR
Specular(RGB) Gloss(A) - Specular highlights and reflections are tinted by the RGB component of this texture, and the optional alpha channel contains a multiplier on the material's shininess/gloss value.

NORMAL MAP
Normalmap(RGB) - This texture slot accepts tangent-space, RGB normal-maps, the alpha channel is ignored. The texture assets applied to this slot must be of Texture Type: "Normal map". Unity will warn you and show a "Fix Now" button if this is not the case.

GLOW MAP
Glow(RGB) Diffuse Emission(A) - The RGB channels of the Glow Map are multiplied by the Glow Color and Glow Intensity parameters and added on top of the standard, phong-shaded result of this material.

The Alpha channel contains a Diffuse Emission Mask, which combined with the Diffuse Emission Strength parameter, controls how much of the material's diffuse color is added on top of the standard, phong-shaded result.

Note: the difference between Diffuse Emission and Glow becomes important when baking lightmaps or probes. Diffuse Emission adds diffuse-colored light at emission-masked intensity into the scene when baking but Glow color and intensity are ignored; this is a limitation of Beast.


---

SHADER SOURCE
---
All variations of Marmoset shaders are built upon a core set of include files, written in Cg, and come with full source. They can be found in the Marmoset/Shader/ folder as:

MarmosetCore.cginc - Shader math and RGBM code
MarmosetInput.cginc - Material parameters and input structures for ShaderLab shaders
MarmosetDirect.cginc - Direct lighting function for ShaderLab. Omni, direct, and spot-light results are computed here.
MarmosetSurf.cginc - Surface Lighting function for ShaderLab. Image-based lighting and texture lookups are performed here.

All shader variations include these core .cginc files and configure a list of features they want out of them using preprocessor macros (#defines).  

#DEFINE FEATURES
---
#define MARMO_HQ
High-quality mode adds extra vector normalization and more rigorous lighting math to a few places in the shader. Disabled on mobile.

#define MARMO_SKY_ROTATION
Rotates reflection and normal vectors by a sky transform matrix passed in by sky objects. This is performed in the fragment shader and is costly. Diabled on mobile.

#define MARMO_DIFFUSE_IBL
Enables a lookup into the diffuse image-based lighting cubemap.

#define MARMO_SPECULAR_IBL
Enables a lookup into the specular image-based lighting cubemap.

#define MARMO_DIFFUSE_DIRECT
Enables diffuse contributions from direct light sources such as point and directional lights.

#define MARMO_SPECULAR_DIRECT
Enables specular contributions from direct light sources such as point and directional lights.

#define MARMO_NORMALMAP
Adds a normal-mapping texture lookup and math to the fragment shader.

#define MARMO_MIP_GLOSS 
Uses the specular sharpness material property to look into a specific mip level of the specular image-based lighting cubemap.
Note: Disable on hardware that does not support textureCubeLod texture lookups.

#define MARMO_GLOW
Adds a glow map texture lookup and math for self illuminating surfaces.

#define MARMO_PREMULT_ALPHA
Premultiplies OUT.Albedo.rgb by OUT.Alpha, to be used with a premultipled-alpha blending mode. This option does NOT premultiply the specular output, so the specular component of the surface is blended additively (See Simple Glass shader).

